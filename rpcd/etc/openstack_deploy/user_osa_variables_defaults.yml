---
# Copyright 2016, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## Warning
#
# This file is controlled by the devs and will be overwritten on upgrade
# If you wish to override the variables set here, use /etc/openstack_deploy/user_osa_variables_overrides.yml

# The release tag to use for the repo and venvs
openstack_release: "{{ rpc_release }}"

# SQLAlchemy/Olso Thread Pool Settings
rpc_conn_pool_size: 180
rpc_response_timeout: 180
rpc_thread_pool_size: 180
db_max_overflow: 60
db_max_pool_size: 120
db_pool_timeout: 60

cinder_rpc_executor_thread_pool_size: "{{ rpc_thread_pool_size }}"
cinder_rpc_response_timeout: "{{ rpc_response_timeout }}"

keystone_database_max_pool_size: "{{ db_max_pool_size }}"
keystone_database_pool_timeout: "{{ db_pool_timeout }}"

neutron_api_workers: 64
neutron_rpc_conn_pool_size: "{{ rpc_conn_pool_size }}"
neutron_rpc_response_timeout: "{{ rpc_response_timeout }}"
neutron_rpc_thread_pool_size: "{{ rpc_thread_pool_size }}"
neutron_db_max_overflow: "{{ db_max_overflow }}"
neutron_db_max_pool_size: "{{ db_max_pool_size }}"
neutron_db_pool_timeout: "{{ db_pool_timeout }}"

nova_rpc_conn_pool_size: "{{ rpc_conn_pool_size }}"
nova_rpc_response_timeout: "{{ rpc_response_timeout }}"
nova_rpc_thread_pool_size: "{{ rpc_thread_pool_size }}"
nova_db_max_overflow: "{{ db_max_overflow }}"
nova_db_max_pool_size: "{{ db_max_pool_size }}"
nova_db_pool_timeout: "{{ db_pool_timeout }}"
nova_api_db_max_overflow: "{{ db_max_overflow }}"
nova_api_db_max_pool_size: "{{ db_max_pool_size }}"
nova_api_db_pool_timeout: "{{ db_pool_timeout }}"
nova_cpu_allocation_ratio: 2.0
nova_ram_allocation_ratio: 1.0

# Nova config overrides
# NOTE: Due to a bug with nova, this variable cannot be set to true
# if the environment needs to be able to boot an instance from
# a volume
# https://bugs.launchpad.net/nova/+bug/1648324
#nova_cross_az_attach: False
nova_console_type: novnc

# RabbitMQ overrides
rabbitmq_ulimit: 65535

# Memcached overrides
# https://github.com/rcbops/rpc-openstack/issues/1048
# memcached_memory is calculated via https://github.com/openstack/openstack-ansible-memcached_server/blob/master/defaults/main.yml#L33
# based on container memory but this determination it not necessarily correct,
# since memory utilization is primarily driven by the objects placed in memcached.
memcached_connections: 16384

#TODO (evrardjp): Remove this when ocata
# Keystone overrides
keystone_token_driver: "sql"

# Galera overrides
galera_cluster_name: rpc_galera_cluster

# Ceph overrides
ceph_mons: >
  {% set _var = [] -%}
  {% if 'mons' in groups -%}
  {% for mon in groups.mons -%}
  {% if _var.append(hostvars[mon]['ansible_ssh_host']) -%}{% endif -%}
  {% endfor -%}
  {% endif -%}
  {{ _var }}

# locations for the package builder to look for files that contain pip packages and git repos to build from
pkg_locations:
  - ../
  - /etc/ansible/roles
  - /etc/openstack_deploy
  - /opt/rpc-openstack/rpcd

# List of files to override using the OSA horizon role
rackspace_static_files_folder: "/opt/rpc-openstack/logo_files"
horizon_custom_uploads:
  logo-splash:
    src: "{{ rackspace_static_files_folder }}/logo-splash.png"
    dest: img/logo-splash.png
  logo:
    src: "{{ rackspace_static_files_folder }}/logo.png"
    dest: img/logo.png
  favicon:
    src: "{{ rackspace_static_files_folder }}/favicon.ico"
    dest: img/favicon.ico

# Use RPC python package index
repo_build_pip_extra_indexes:
  - "https://rpc-repo.rackspace.com/pools"

# We pin download.ceph.com so ceph packages are not downloaded for the
# UCA repository that was added in newton.
# For more information please see https://github.com/rcbops/u-suk-dev/issues/747
ceph_apt_pinned_packages:
    - { package: "*", release: "RedHat", priority: 995 }

## Enable Neutron l2_population
# We are overriding the default value for neutron_l2_population. Please see
# https://github.com/rcbops/rpc-openstack/issues/973 for further details.
neutron_l2_population: True

# Based on https://github.com/rcbops/rpc-openstack/issues/1149
# L3HA has to be disabled until all major issues are fixed.
neutron_neutron_conf_overrides:
  DEFAULT:
    l3_ha: False

#Set the default for Neutron-HA-tool to true
neutron_legacy_ha_tool_enabled: true

cinder_service_backup_program_enabled: false

repo_build_upper_constraints_overrides:
  # Due to https://bugs.launchpad.net/ceilometer/+bug/1660800, gnocchiclient
  # must be pinned to < 3.0.0. This constraint matches what is defined in
  # the optional dependencies specfied here:
  # https://github.com/openstack/ceilometer/blob/stable/newton/setup.cfg#L36
  - "gnocchiclient>=2.2.0,<3.0.0"

# The Octavia repo details are added here so that the CI build for
# artifacts is able to complete.
# TODO(odyssey4me): Remove this when RPC-O switches to Ocata which
# has this information set in-tree.
octavia_git_install_branch: 'stable/ocata'
octavia_git_repo: 'https://git.openstack.org/openstack/octavia'
octavia_git_project_group: 'octavia_all'
octavia_git_install_fragments: "venvwithindex=True&ignorerequirements=True"

# Increase interval between checks after container start.
# Reduces the "Wait for container ssh" error.
ssh_delay: 60

# Use the correct secrets file
osa_secrets_file_name: "user_osa_secrets.yml"

# Disable glance image cache
glance_flavor: keystone
glance_glance_api_conf_overrides:
  DEFAULT:
    image_cache_dir: None

# Adding elastic search and kibana to haproxy_extra_services
haproxy_extra_services:
  - service:
      haproxy_service_name: elasticsearch
      haproxy_backend_nodes: "{{ groups['elasticsearch'] | default([]) }}"
      haproxy_ssl: False
      haproxy_port: 9200
      haproxy_balance_type: http
      haproxy_backend_options:
        - "httpchk /healthcheck"
  - service:
      haproxy_service_name: kibana_ssl
      haproxy_backend_nodes: "{{ groups['kibana'] | default([]) }}"
      haproxy_ssl: False
      haproxy_port: 8443
      haproxy_balance_type: tcp
      haproxy_backend_options:
        - "ssl-hello-chk"

#
# Set the LXC container creation to use the container repository
#
lxc_image_cache_server: "{{ rpco_mirror_base_url | netloc_no_port }}"

# TODO(odyssey4me)
# The 'no-validate' option should be removed once this work is done:
#   https://github.com/rcbops/u-suk-dev/issues/1296
lxc_cache_default_variant: "default-{{ rpc_release }}"
lxc_cache_download_template_extra_options: "--no-validate"

# TODO(odyssey4me)
# The 'no-validate' option should be removed once this work is done:
#   https://github.com/rcbops/u-suk-dev/issues/1296
lxc_container_variant: "{{ lxc_cache_default_variant }}"
lxc_container_download_template_extra_options: "--no-validate"

# As we pre-build our container images, they have no ssh keys in them.
# The ssh keys are required in order for delegation from a container to
# another container to work. eg: os-keystone-install delegates the
# rabbitmq and mariadb tasks from the keystone container to the
# respective rabbit/mariadb container.
lxc_container_commands: |
  key="{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
  mkdir -p /root/.ssh
  chmod 700 /root/.ssh
  if [[ ! "$(grep -q "$key" /root/.ssh/authorized_keys)" ]]; then
    echo "$key" | tee -a /root/.ssh/authorized_keys
  fi
  chmod 700 /root/.ssh/authorized_keys

#
# Set variables used for enabling/disabling the use of staged apt/container artifacts
#
# TODO(odyssey4me):
# Switch this to HTTPS before we use this in production but only once the
# container artifact build issues with https are figured out
rpco_mirror_base_url: "http://rpc-repo.rackspace.com"

#
# Set RPC deployments to make use of the apt artifacts repository
#
rpco_mirror_apt_deb_line: "deb {{ rpco_mirror_apt_url }} {{ rpc_release }}-{{ ansible_distribution_release }} main"
rpco_mirror_apt_url: "{{ rpco_mirror_base_url }}/apt-mirror/integrated/"
rpco_mirror_apt_filename: rpco
rpco_gpg_key_location: "{{ rpco_mirror_base_url }}/apt-mirror/"
rpco_gpg_key_name: "rcbops-release-signing-key.asc"
rpco_gpg_key_id: 52AA252F #SET IN STATIC (to force key verification per release).

# We won't be using the repo package cache, as we'll have a full mirror.
# TODO (odyssey4me):
# Implement the apt artifact staging as part of the standard
# deploy script. However skip that stage for AIO's.
repo_pkg_cache_enabled: no

# We don't want the Trusty backports repo to be added because
# all packages must come from our apt artifacts.
lxc_package_repo_add: no

# We need to ensure that the RPC-O repo containing apt
# artifacts is included in the LXC container prep.
lxc_container_cache_files:
  - src: "/etc/apt/sources.list.d/{{ rpco_mirror_apt_filename }}.list"
    dest: "/etc/apt/sources.list.d/{{ rpco_mirror_apt_filename }}.list"

# For convenience
rpco_apt_repo:
  repo: "{{ rpco_mirror_apt_deb_line }}"
  state: "present"
  filename: "{{ rpco_mirror_apt_filename }}"
rpco_apt_gpg_keys:
  - hash_id:  "{{ rpco_gpg_key_id }}"
    url: "{{ rpco_gpg_key_location }}{{ rpco_gpg_key_name }}"
    state: "present"

# HAProxy
haproxy_repo: "{{ rpco_apt_repo }}"
haproxy_gpg_keys: "{{ rpco_apt_gpg_keys }}"

# RabbitMQ
rabbitmq_install_method: "external_repo"
rabbitmq_repo: "{{ rpco_apt_repo }}"
rabbitmq_gpg_keys: "{{ rpco_apt_gpg_keys }}"

# ceph_client wiring
ceph_apt_repos:
  uca: "{{ rpco_apt_repo }}"
ceph_pkg_source: "uca"

# galera_client role wiring
galera_client_repo: "{{ rpco_mirror_apt_deb_line }}"
mariadb_repo_filename: "{{ rpco_mirror_apt_filename }}"
galera_client_gpg_keys: "{{ rpco_apt_gpg_keys }}"

# galera_server wiring
use_percona_upstream: True
galera_repo: "{{ rpco_apt_repo }}"
galera_percona_xtrabackup_repo: "{{ rpco_apt_repo }}"

# neutron, nova wiring
uca_enable: False
user_external_repo_keys_list:
  - id: "{{ rpco_gpg_key_id }}"
    url: "{{ rpco_gpg_key_location }}{{ rpco_gpg_key_name }}"
user_external_repos_list:
  - "{{ rpco_apt_repo }}"
# old wiring, to remove when https://review.openstack.org/#/c/438499/
# is merged into rpc-o newton. Necessary to build artifacts meanwhile.
user_external_repo_key:
  id: "{{ rpco_gpg_key_id }}"
  url: "{{ rpco_gpg_key_location }}{{ rpco_gpg_key_name }}"
user_external_repo: "{{ rpco_apt_repo }}"

# Elasticsearch
elasticsearch_apt_repos:
  - "{{ rpco_apt_repo }}"
elasticsearch_apt_keys: "{{ rpco_apt_gpg_keys }}"

# Filebeat
filebeat_apt_repos:
  - "{{ rpco_apt_repo }}"
filebeat_apt_gpg_keys: "{{ rpco_apt_gpg_keys }}"

# Kibana
kibana_apt_repos:
  - "{{ rpco_apt_repo }}"
kibana_apt_keys: "{{ rpco_apt_gpg_keys }}"

# Logstash
logstash_apt_repos:
  - "{{ rpco_apt_repo }}"
logstash_apt_keys: "{{ rpco_apt_gpg_keys }}"

# MAAS
# The MAAS apt repo cannot be included in the integrated apt repository
# due to the fact that the same package name/version is used for multiple
# distributions, but the content and checksums are different.
maas_apt_repos:
  - repo: "deb {{ rpco_mirror_base_url }}/apt-mirror/independant/rax-maas-{{ ansible_distribution_release }}/ {{ rpc_release }}-{{ ansible_distribution_release }} main"
    state: "present"
    filename: "rax-maas"
maas_apt_keys: "{{ rpco_apt_gpg_keys }}"

# HWRAID
# The HWRAID apt repo cannot be included in the integrated apt repository
# due to the fact that the same package name/version is used for multiple
# distributions, but the content and checksums are different.
hwraid_apt_repos:
  - repo: "deb {{ rpco_mirror_base_url }}/apt-mirror/independant/hwraid-{{ ansible_distribution_release }}/ {{ rpc_release }}-{{ ansible_distribution_release }} main"
    state: "present"
    filename: "hwraid"
hwraid_apt_keys: "{{ rpco_apt_gpg_keys }}"
