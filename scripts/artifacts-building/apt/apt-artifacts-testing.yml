---
- hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - aptly-vars.yml
  vars:
    package_files_path: /tmp/Packages-files
  tasks:
    - file:
        path: "{{ package_files_path }}"
        state: directory
    - name: Fetch rpc-repo package files
      copy:
        src: "{{ artifacts_aptrepos_dest_folder }}/public/integrated/dists/{{ rpc_release }}-{{ item[0] }}/{{ item[1] }}/binary-{{ item[2] }}/Packages"
        dest: "{{ package_files_path }}/rpcrepo-{{ item[0] }}-{{ item[1] }}-{{ item[2] }}"
        remote_src: yes
      with_nested:
        - ['trusty', 'xenial']
        - ['main']
        - ['amd64']
    - name: Fetch ubuntu default release (compressed) package file
      shell: |
        wget http://mirror.rackspace.com/ubuntu/dists/{{ item[0] }}/{{ item[1] }}/binary-{{ item[2] }}/Packages.gz
        gunzip Packages.gz
        mv Packages ubuntu-{{ item[0] }}-{{ item[1] }}-{{ item[2] }}
      args:
        chdir: "{{ package_files_path }}"
      with_nested:
        - ['trusty','xenial']
        - ['main','universe']
        - ['amd64']
    # Test trusty
    - name: Init lists
      set_fact:
        install_packages: []
        packages_files_list: []
    - name: Build list of all the Packages files used in a trusty amd64
      set_fact:
        packages_files_list: "{{ packages_files_list }} + [ '{{ package_files_path }}/{{ item[0] }}-trusty-{{ item[1] }}-amd64' ]"
      with_together:
        - ['rpcrepo', 'ubuntu', 'ubuntu']
        - ['main', 'main', 'universe']
    - name: Creating a list of all the packages files existing for trusty based on the Packages files
      set_fact:
        all_packages: |
          {% set package_list = []  %}
          {% for package_file in packages_files_list %}
            {% for key, value in lookup('packages_file',package_file).iteritems() %}
              {% set _ = package_list.append(key) %}
            {% endfor %}
          {% endfor %}
          {{ package_list }}
    - name: Create a list of the packages to install based on roles
      set_fact:
        install_packages: "{{ install_packages }} + [ '{{ item }}' ]"
      with_packages_to_install:
        - from:
            - /etc/ansible/roles
          for: trusty
          pkg_blacklist:
            - "{% raw %}.*{{.*}}.*{% endraw %}"
          var_blacklist:
            - nova_compute_powervm_distro_packages
    - name: How many packages have to be installed at max?
      debug:
        msg: "The answer is: {{ install_packages | length }}"
    - name: List packages to be installed which are not in rpc-repo or ubuntu trusty release
      debug:
        msg: "{{ install_packages | difference(all_packages) }}"
